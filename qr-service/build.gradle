plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kr.folio'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Cloud
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.1.3'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.0.3'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Amazon S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

String jarName = "qr-service.jar"

tasks.named("bootJar") {
    bootJar.getArchiveFileName().set(jarName)

    bootJar.doLast(task -> {
        copy(copySpec -> {
            copySpec.from("build/libs/" + jarName)
            copySpec.into("../build/libs")
        })
    })
}